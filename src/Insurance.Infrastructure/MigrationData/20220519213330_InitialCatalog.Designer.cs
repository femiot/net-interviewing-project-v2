// <auto-generated />
using Insurance.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Insurance.Infrastructure.MigrationData
{
    [DbContext(typeof(InsuranceContext))]
    [Migration("20220519213330_InitialCatalog")]
    partial class InitialCatalog
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("Insurance.Shared.Entities.CostRangeRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateCreated")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IgnoreMax")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastUpdatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<float>("Max")
                        .HasColumnType("REAL");

                    b.Property<float>("Min")
                        .HasColumnType("REAL");

                    b.Property<float>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("CostRangeRules", (string)null);
                });

            modelBuilder.Entity("Insurance.Shared.Entities.InsuranceExtraCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ApplyCostRangeRule")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateCreated")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<float>("ExtraCost")
                        .HasColumnType("REAL");

                    b.Property<string>("LastUpdatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("InsuranceExtraCosts", (string)null);
                });

            modelBuilder.Entity("Insurance.Shared.Entities.ProductTypeSurchargeCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateCreated")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Rate")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("ProductTypeSurchargeCosts", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
